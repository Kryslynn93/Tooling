---
pagination:
  data: categories
  size: 1
  alias: category
permalink: categories/{{ category.category | slug }}.html
---

<html>
  <head>
    <link rel="stylesheet" type="text/css" href="../assets/main.css"/>
  </head>
  <body>
    {% include "fork-me.njk" %}

    <div class="flex flex-col">

      {% include "nav-bar.njk" %}

      <div class="container mx-auto">

        <div class="text-center">
          <h1 class="text-primary-800 font-heading text-2xl font-bold tracking-heading md:text-6xl leading-snug mt-4 mb-4">
            {{category.category}}</h1>

          <h2
          class="text-gray-700 font-heading text-lg leading-relaxed tracking-body font-regular mb-10 max-w-4xl mx-auto">
          Click on a heading to sort.
          <br>
          Filter using one or more keywords
          <br>
          Click the More Details button for more information on a tool
          <br><br>
          Note: The homepage and repository links may lead to the same place!
        </h2>
        </div>

        <div class="sm:-mx-6 lg:-mx-8">
          <div class="inline-block min-w-full py-2 sm:px-6 lg:px-8">
            <div class="py-1 px-4 flex rounded-lg border w-[100%] h-14 border-gray-300 hover:border-gray-600 focus:border-gray-600 text-gray-700 shadow text-sm mt-6 mb-8">
              <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="my-auto opacity-70">
                <path d="M14.875 14.8751L11.6974 11.6918L14.875 14.8751ZM13.4583 7.43758C13.4583 9.03441 12.824 10.5658 11.6949 11.695C10.5657 12.8241 9.03432 13.4584 7.4375 13.4584C5.84067 13.4584 4.30925 12.8241 3.18013 11.695C2.051 10.5658 1.41666 9.03441 1.41666 7.43758C1.41666 5.84076 2.051 4.30933 3.18013 3.18021C4.30925 2.05108 5.84067 1.41675 7.4375 1.41675C9.03432 1.41675 10.5657 2.05108 11.6949 3.18021C12.824 4.30933 13.4583 5.84076 13.4583 7.43758V7.43758Z" stroke="#000" stroke-width="2" stroke-linecap="round" class=""></path>
              </svg>
              <input type="text" onkeyup="searchNamesDescriptions()" class="border-none outline-none flex-1 focus:ring-0 ml-4" id="search-by-name-and-description" placeholder="Filter by keywords"/>
            </div>
            <div class="overflow-hidden">
              <table id="tools-table" class="min-w-full text-base text-left text-gray-500 dark:text-gray-400">
                {# <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"> #}
                <tr class="text-s text-center text-black border-b  border-neutral-500">
                  <th class="sortable-heading px-4 py-2">Name</th>
                  <th class="sortable-heading px-4 py-2">Description</th>
                  <th class="sortable-heading px-4 py-2">Homepage</th>
                  <th class="sortable-heading px-4 py-2">Repository</th>
                  <th class="sortable-heading px-4 py-2">3.1?</th>
                  <th class="sortable-heading px-4 py-2">3.0?</th>
                  <th class="sortable-heading px-4 py-2">2.0?</th>
                  <th class="sortable-heading px-4 py-2">Stars</th>
                  <th class="px-4 py-2">Properties</th>
                </tr>
                {# <thead> #}
                {% for tool in category.tools %}
                  <tr class="border-b transition duration-300 ease-in-out hover:bg-neutral-100 dark:border-neutral-500 dark:hover:bg-neutral-200 text-black">
                    <td scope="row" class="px-4 py-2 whitespace-nowrap">{{tool.displayName}}</td>
                    <td class="px-4 py-2">{{tool.displayDescription}}</td>
                    <td class="px-4 py-2">
                      {% if tool.homepage %}
                        <a target="_blank" href={{tool.homepage}}>Link</a>
                      {% else %}No{% endif %}
                    </td>
                    <td class="px-4 py-2">
                      {% if tool.repository %}
                        <a target="_blank" href={{tool.repository}}>Link</a>
                      {% else %}No{% endif %}
                    </td>
                    <td class="px-4 py-2">{{tool.version31}}</td>
                    <td class="px-4 py-2">{{tool.version30}}</td>
                    <td class="px-4 py-2">{{tool.swagger}}</td>
                    <td class="px-4 py-2">{{tool.stars}}</td>
                    <td scope="row" class="px-4 py-2 whitespace-nowrap">
                      {% if tool.moreDetails %}
                        <button type="button" id="{{tool.id}}-open-button" class="inline-block rounded bg-lightgreen px-6 pb-2 pt-2.5 text-xs text-#4c5b31 font-medium uppercase leading-normal shadow-[0_4px_9px_-4px_#4c5b31] transition duration-150 ease-in-out hover:bg-primary-600 focus:bg-primary-600">More Details</button>
                      {% endif %}
                    </tr>
                  {% endfor %}
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Overlay for a given tool -->

      <div class="fixed hidden inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full" id="modal">

        <!-- Modal for a given tool -->

        <div class="relative top-40 mx-auto p-5 border w-2/5 shadow-lg rounded-md bg-white">
          <div class="mt-3 text-center">

            <div id="tool-content"></div>

            <div class="items-center px-4 py-3">
              <button id="modal-close-button" class="px-4 py-2 bg-lightgreen text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-lightgreen focus:outline-none focus:ring-2 focus:ring-lightgreen">OK</button>
            </div>
          </div>
        </div>
      </div>

      <div id="tool-collection" hidden>
        {% for tool in category.tools %}

          <div id="{{tool.id}}-info" hidden>
            <div class="ml-24 mr-24">
              <h1 class="pb-8">{{tool.displayName}}</h1>
              <p class="mb-8">{{tool.displayDescription}}</p>
            </div>
            <table class="border-collapse table-auto w-full text-sm">
              <tbody>
                <tr>
                  <td class="p-4 pl-8">Repository Owner</td>
                  <td class="p-4">{{tool.owner}}</td>
                </tr>
                <tr>
                  <td class="p-4 pl-8">Stars</td>
                  <td class="p-4">{{tool.stars}}</td>
                </tr>
                <tr>
                  <td class="p-4 pl-8">Watchers</td>
                  <td class="p-4">{{tool.watchers}}</td>
                </tr>
                <tr>
                  <td class="p-4 pl-8">Forks</td>
                  <td class="p-4">{{tool.forks}}</td>
                </tr>
                <tr>
                  <td class="p-4 pl-8">Created</td>
                  <td class="p-4">{{tool.created}}</td>
                </tr>
                <tr>
                  <td class="p-4 pl-8">Last Updated</td>
                  <td class="p-4">{{tool.lastUpdated}}</td>
                </tr>
                <tr>
                  <td class="p-4 pl-8">Archived</td>
                  <td class="p-4">{{tool.archived}}</td>
                </tr>
                <tr>
                  <td class="p-4 pl-8">Language</td>
                  <td class="p-4">{{tool.language}}</td>
                </tr>

              </tbody>
            </table>
          </div>

        {% endfor %}
      </div>

      <script src="assets/index.js"></script>
      <script type="text/javascript">
        const getCellValue = (tr, idx) => {
          const value = tr
            .children[idx]
            .innerText || tr
            .children[idx]
            .textContent

          if (value === 'N/A') {
            return -1
          }

          return value
        };
        const comparer = (idx, asc) => (a, b) => (
          (v1, v2) => v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2)
          ? v1 - v2
          : v1.toString().localeCompare(v2))(getCellValue(
          asc
          ? a
          : b,
        idx), getCellValue(
          asc
          ? b
          : a,
        idx));

        document
          .querySelectorAll('th')
          .forEach(th => th.addEventListener('click', (() => {
            const table = th.closest('table');

            Array
              .from(table.querySelectorAll('tr:nth-child(n+2)'))
              .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
              .forEach(tr => table.appendChild(tr));
          })));
      </script>

      <script type="text/javascript">

        const modal = document.getElementById("modal");
        const toolCloseButton = document.getElementById("modal-close-button");
        const getTableCellValue = function (row, index) {
          const cell = row.getElementsByTagName("td")[index];

          if (cell) {
            return (
              cell
              ? cell.textContent || cell.innerText
              : "").toLowerCase()
          }

          return null;
        }
        const isSearchMatch = function (words, name, description) {
          return words
            .filter((word) => name.indexOf(word) > -1 || description.indexOf(word) > -1)
            .length === words.length
        }

        const searchNamesDescriptions = function () {
          const input = document.getElementById("search-by-name-and-description");
          const words = input
            .value
            .toLowerCase()
            .split(" ")
          const table = document.getElementById("tools-table");
          const tr = table.getElementsByTagName("tr");

          for (i = 0; i < tr.length; i++) {
            const name = getTableCellValue(tr[i], 0)
            const description = getTableCellValue(tr[i], 1)

            if (name || description) {
              if (isSearchMatch(words, name, description)) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }
            }
          }
        }

        const closeModal = function () {
          const collection = document.getElementById("tool-collection")
          const wrapper = document.getElementById("tool-content")
          const children = wrapper.children

          for (let i = 0; i < children.length; i++) {
            children[i].setAttribute("hidden", "")
            collection.appendChild(children[i])
          }

          modal.style.display = "none";
        }

        toolCloseButton.onclick = closeModal;

        {% for tool in category.tools %}

          {% if (tool.moreDetails) %}
            document
              .getElementById("{{tool.id}}-open-button")
              .onclick = function () {
                const wrapper = document.getElementById("tool-content")
                const content = document.getElementById("{{tool.id}}-info")

                content.removeAttribute("hidden")

                wrapper.appendChild(content)
                modal.style.display = "block";
              }
            {% endif %}

          {% endfor %}

          document
          .addEventListener('keydown', (event) => {
            if (event.key === 'Escape') {
              closeModal();
            }
          })

        window.onclick = function (event) {
          if (event.target == modal) {
            closeModal();
          }
        }
      </script>
    </body>
  </html>